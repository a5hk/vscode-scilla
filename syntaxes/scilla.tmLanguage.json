{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Scilla",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#types"
    },
    {
      "include": "#libraries"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#punctuations"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#contract"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.scilla",
          "match": "\\b(match)\\b"
        },
        {
          "name": "keyword.scilla",
          "match": "\\b(accept|as|builtin|catch|delete|Emp|end|event|exists|field|forall|fun|import|in|let|library|Map|match|of|scilla_version|send|tfun|throw|try|with)\\b"
        },
        {
          "name": "keyword.operator.scilla",
          "match": "(=|=>|:=|<-|\\|)"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "support.type.scilla",
          "match": "\\b(Int32|Int64|Int128|Int256|Uint32|Uint64|Uint128|Uint256|String|BNum|Message|Event|ByStr|ByStr20|ByStr32|ByStr64|Map|Bool|Option|List|Pair|Nat)\\b"
        },
        {
          "begin": "\\b(type)\\b\\s*",
          "end": "([A-Z][a-zA-Z0-9_]*)",
          "beginCaptures": {
            "1": { "name": "keyword.control.scilla" }
          },
          "endCaptures": {
            "0": { "name": "storage.type.scilla" }
          }
        }
      ]
    },
    "libraries": {
      "patterns": [
        {
          "name": "support.other.namespace.scilla",
          "match": "\\b(BoolUtils|IntUtils|ListUtils|NatUtils|PairUtils)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "support.variable.scilla",
          "match": "\\b(_amount|_sender|_recipient|_tag|_eventname|_this_address|_creation_block|_origin|_balance)\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "support.constant.scilla",
          "match": "\\b(False|True|Nil|Zero)\\b"
        }
      ]
    },
    "comments": {
      "name": "comment.block.parenthesis.scilla",
      "begin": "\\(\\*",
      "end": "\\*\\)",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.comment.scilla" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.comment.scilla" }
      }
    },
    "strings": {
      "name": "string.quoted.double.scilla",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.scilla",
          "match": "\\\\."
        }
      ]
    },
    "punctuations": {
      "patterns": [
        {
          "name": "punctuation.scilla",
          "match": ",|;|\\(|\\)|\\{|\\}|\\[|\\]|:"
        }
      ]
    },
    "functions": {
      "begin": "\\b(transition|procedure)\\b\\s*([a-zA-Z][a-zA-Z0-9_]*)\\s*",
      "end": "(?<=\\))",
      "beginCaptures": {
        "1": { "name": "keyword.scilla" },
        "2": { "name": "entity.name.function.scilla" }
      },
      "patterns": [
        {
          "include": "#parameters_list"
        }
      ]
    },
    "parameters_list": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.parameters.begin.scilla" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.parameters.end.scilla" }
      },
      "patterns": [
        {
          "include": "#parameters"
        }
      ]
    },
    "parameters": {
      "begin": "([a-zA-Z][a-zA-Z0-9_]*)\\s*(:)\\s*",
      "end": "(?!\\G)",
      "beginCaptures": {
        "1": { "name": "variable.parameter.scilla" },
        "2": { "name": "punctuation.scilla" }
      },
      "patterns": [
        {
          "include": "#types"
        },
        {
          "name": "storage.type.scilla",
          "match": "[A-Z][a-zA-Z0-9_]*"
        },
        {
          "include": "$self"
        }
      ]
    },
    "contract": {
      "begin": "\\b(contract)\\b\\s*([A-Z][a-zA-Z0-9_]*)\\b\\s*",
      "end": "(?<=\\))",
      "beginCaptures": {
        "1": { "name": "keyword.scilla" },
        "2": { "name": "entity.name.class" }
      },
      "patterns": [
        {
          "include": "#parameters_list"
        }
      ]
    }
  },
  "scopeName": "source.scilla"
}
